{"version":3,"sources":["services/persons.js","components/Notification.js","components/Filter.js","components/PersonForm.js","components/NumberItem.js","components/Numbers.js","App.js","index.js"],"names":["baseUrl","persons","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","deleteObject","delete","Notification","notification","message","className","type","Filter","nameFilter","onNameFilterChange","value","onChange","PersonForm","newName","newNumber","onNewNameChange","onNewNumberChange","onSubmit","NumberItem","person","onDeletePerson","name","number","onClick","Numbers","map","App","useState","setPersons","setNameFilter","setNewName","setNewNumber","setNotification","useEffect","personServices","initialPersons","personsToShow","filter","toLowerCase","includes","e","target","preventDefault","newPerson","returnedPerson","concat","setTimeout","find","window","confirm","personWithDeletedPerson","deletedPerson","catch","error","errorMessage","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cad43f69.chunk.js","sourcesContent":["import axios from 'axios';\nconst baseUrl = `/api/persons`;\n\nconst getAll = () => {\n\tconst request = axios.get(baseUrl);\n\treturn request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n\tconst request = axios.post(baseUrl, newObject);\n\treturn request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n\tconst request = axios.put(`${baseUrl}/${id}`, newObject);\n\treturn request.then((response) => response.data);\n};\n\nconst deleteObject = (id) => {\n\tconst request = axios.delete(`${baseUrl}/${id}`);\n\treturn request.then((response) => response.data);\n};\n\nconst persons = { getAll, create, update, deleteObject };\n\nexport default persons;\n","const Notification = ({ notification }) => {\n  if (!notification.message) {\n    return null;\n  }\n\n  return (\n    <div className={`notification ${notification.type}`}>\n      {notification.message}\n    </div>\n  );\n};\n\nexport default Notification;\n","const Filter = ({ nameFilter, onNameFilterChange }) => {\n\treturn (\n\t\t<div>\n\t\t\tfilter shown with{' '}\n\t\t\t<input value={nameFilter} onChange={onNameFilterChange} />\n\t\t</div>\n\t);\n};\n\nexport default Filter;\n","const PersonForm = ({\n\tnewName,\n\tnewNumber,\n\tonNewNameChange,\n\tonNewNumberChange,\n\tonSubmit,\n}) => {\n\treturn (\n\t\t<form onSubmit={onSubmit}>\n\t\t\t<div>\n\t\t\t\tname: <input value={newName} onChange={onNewNameChange} />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\tnumber: <input value={newNumber} onChange={onNewNumberChange} />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<button type=\"submit\">add</button>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\nexport default PersonForm;\n","const NumberItem = ({ person, onDeletePerson }) => {\n\treturn (\n\t\t<div>\n\t\t\t{person.name} {person.number}{' '}\n\t\t\t<button type=\"button\" onClick={() => onDeletePerson(person.id)}>\n\t\t\t\tdelete\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nexport default NumberItem;\n","import NumberItem from './NumberItem';\n\nconst Numbers = ({ persons, onDeletePerson }) => {\n\treturn (\n\t\t<div>\n\t\t\t{persons.map((person) => (\n\t\t\t\t<NumberItem\n\t\t\t\t\tkey={person.id}\n\t\t\t\t\tperson={person}\n\t\t\t\t\tonDeletePerson={onDeletePerson}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nexport default Numbers;\n","import './index.css';\nimport { useState, useEffect } from 'react';\nimport personServices from './services/persons';\nimport Notification from './components/Notification';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Numbers from './components/Numbers';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [nameFilter, setNameFilter] = useState('');\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [notification, setNotification] = useState({});\n\n  useEffect(() => {\n    personServices\n      .getAll()\n      .then((initialPersons) => setPersons(initialPersons));\n  }, []);\n\n  const resetPersonFormState = () => {\n    setNewName('');\n    setNewNumber('');\n  };\n\n  const handleNameFilterChange = (e) => {\n    setNameFilter(e.target.value);\n  };\n\n  const handleNewNameChange = (e) => {\n    setNewName(e.target.value);\n  };\n\n  const handleNewNumberChange = (e) => {\n    setNewNumber(e.target.value);\n  };\n\n  const handlePersonFormSubmit = (e) => {\n    e.preventDefault();\n    const newPerson = {\n      name: newName,\n      number: newNumber,\n    };\n    personServices.create(newPerson).then((returnedPerson) => {\n      setPersons(persons.concat(returnedPerson));\n      resetPersonFormState();\n      setNotification({\n        message: `Added ${returnedPerson.name}`,\n        type: 'success',\n      });\n      setTimeout(() => setNotification({}), 5000);\n    });\n  };\n\n  const handleDeletePerson = (id) => {\n    const person = persons.find((person) => person.id === id);\n    const confirmDeletion = window.confirm(`Delete ${person.name} ?`);\n    if (confirmDeletion) {\n      const personWithDeletedPerson = persons.filter(\n        (person) => person.id !== id\n      );\n      personServices\n        .deleteObject(id)\n        .then((deletedPerson) => {\n          setPersons(personWithDeletedPerson);\n        })\n        .catch((error) => {\n          setPersons(personWithDeletedPerson);\n          const errorMessage = `Information of ${person.name} has already been removed from server`;\n          console.log(errorMessage);\n          setNotification({\n            message: errorMessage,\n            type: 'error',\n          });\n          setTimeout(() => setNotification({}), 5000);\n        });\n    }\n  };\n\n  const personsToShow =\n    nameFilter === ''\n      ? persons\n      : persons.filter((person) =>\n          person.name.toLowerCase().includes(nameFilter.toLowerCase())\n        );\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={notification} />\n      <Filter\n        nameFilter={nameFilter}\n        onNameFilterChange={handleNameFilterChange}\n      />\n      <h2>add a new</h2>\n      <PersonForm\n        newName={newName}\n        newNumber={newNumber}\n        onNewNameChange={handleNewNameChange}\n        onNewNumberChange={handleNewNumberChange}\n        onSubmit={handlePersonFormSubmit}\n      />\n      <h2>Numbers</h2>\n      <Numbers persons={personsToShow} onDeletePerson={handleDeletePerson} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}